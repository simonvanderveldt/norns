def set_options(opt):
    pass

def configure(conf):
    pass

def build_ugen(bld, target, source):
    ugen = bld.shlib(features='c cxx',
        source=source,
        target=target,
        use=['SUPERCOLLIDER'],
        install_path='${PREFIX}/lib/SuperCollider/plugins',
        cflags=['-O3', '-Wall'])

    if bld.env.DEST_OS == 'darwin':
        ugen.env.cxxshlib_PATTERN = '%s.scx'
    else:
        ugen.env.cxxshlib_PATTERN = '%s.so'

def build_ugen_supernova(bld, target, source):
    ugen = bld.shlib(features='c cxx',
        source=source,
        target=target,
        use=['SUPERCOLLIDER'],
        install_path='${PREFIX}/lib/SuperCollider/plugins',
        cflags=['-O3', '-Wall'],
        cxxflags=['-DSUPERNOVA', '-DNOVA_SIMD'])

    if bld.env.DEST_OS == 'darwin':
        ugen.env.cxxshlib_PATTERN = '%s_supernova.scx'
    else:
        ugen.env.cxxshlib_PATTERN = '%s_supernova.so'

def build(bld):
    ugens = [
        {'target':'TrigPhasor', 'source':'ugens/TrigPhasor/TrigPhasor.cpp' }
    ]
    for u in ugens:
        build_ugen(bld, u['target'], u['source'])
        build_ugen_supernova(bld, u['target'], u['source'])

    # Install SC files
    bld.install_files('${PREFIX}/share/SuperCollider/norns', bld.path.ant_glob('core/**/*'), relative_trick=True)
    bld.install_files('${PREFIX}/share/SuperCollider/norns', bld.path.ant_glob('engines/**/*'), relative_trick=True)
    bld.install_files('${PREFIX}/share/SuperCollider/norns', 'norns-config.sc')
